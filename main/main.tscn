[gd_scene load_steps=65 format=3 uid="uid://cg6gxxmwtunye"]

[ext_resource type="AudioStream" uid="uid://c17c5mp58tb8i" path="res://main/music/fairy_ambiance.ogg" id="1_f5373"]
[ext_resource type="PackedScene" uid="uid://cp2p4qglkd0yh" path="res://main/fractal/fractal.tscn" id="1_wh10r"]
[ext_resource type="AudioStream" uid="uid://b05kvmdvha1rx" path="res://main/music/nature.ogg" id="2_2mcl2"]
[ext_resource type="Shader" path="res://main/palette/palette.gdshader" id="2_w464c"]
[ext_resource type="Texture2D" uid="uid://c8t5lmn51bdp8" path="res://main/palette/slso8-1x.png" id="3_c1rxx"]
[ext_resource type="Script" path="res://main/world/world.gd" id="3_pme3a"]
[ext_resource type="PackedScene" uid="uid://cwxwrlvtuymwe" path="res://main/interactable/ark/ark.tscn" id="4_5npem"]
[ext_resource type="Theme" uid="uid://lf8o2b8bvcgo" path="res://main/ui/theme.tres" id="4_h538u"]
[ext_resource type="TileSet" uid="uid://c6reppmexc625" path="res://main/world/tileset/collision_tileset.tres" id="4_s17fs"]
[ext_resource type="Texture2D" uid="uid://cik8etn4q7005" path="res://main/asset/blood.png" id="5_1lvvc"]
[ext_resource type="TileSet" uid="uid://4cpb75gtlnd1" path="res://main/world/tileset/basic_tileset.tres" id="5_g5swk"]
[ext_resource type="Shader" path="res://main/ui/vignette.gdshader" id="5_ippqp"]
[ext_resource type="PackedScene" uid="uid://cn36a2w82vx3l" path="res://main/interactable/sapling/sapling.tscn" id="5_kkdfu"]
[ext_resource type="PackedScene" uid="uid://caw681pxcjose" path="res://main/decoration/spike/spike.tscn" id="6_0sv2d"]
[ext_resource type="PackedScene" uid="uid://bujtvxtfgewh6" path="res://main/player/player.tscn" id="6_oshvt"]
[ext_resource type="PackedScene" uid="uid://c5e4iunc8y22q" path="res://main/fractal/baby_fractal/baby_fractal.tscn" id="7_i71pd"]
[ext_resource type="PackedScene" uid="uid://b84ceqsyuo4b0" path="res://main/asset/shadow/shadow.tscn" id="8_1aew5"]
[ext_resource type="Script" path="res://main/ui/interact_label.gd" id="8_1lx0r"]
[ext_resource type="Texture2D" uid="uid://cdpak2epy427w" path="res://main/ui/seed_icon.png" id="8_chbmg"]
[ext_resource type="Script" path="res://main/ui/property_label.gd" id="8_y18kr"]
[ext_resource type="PackedScene" uid="uid://g1wq4nda7mvf" path="res://main/decoration/water/water.tscn" id="9_bkrme"]
[ext_resource type="PackedScene" uid="uid://dmwb120i3l42n" path="res://main/decoration/cube/cube.tscn" id="11_44ph1"]
[ext_resource type="Texture2D" uid="uid://flt0rqgle5h2" path="res://main/player/head.png" id="11_d7a8q"]
[ext_resource type="Script" path="res://main/ui/god_layer.gd" id="12_kiemv"]
[ext_resource type="FontFile" uid="uid://b1a1pehnsvr2k" path="res://main/ui/graf.ttf" id="13_sak1r"]
[ext_resource type="Texture2D" uid="uid://c2qjtx45f4d7h" path="res://main/decoration/candle.png" id="14_cvt2q"]
[ext_resource type="Shader" path="res://main/asset/fire.gdshader" id="15_p4ca6"]
[ext_resource type="Texture2D" uid="uid://wksolvld3d6r" path="res://main/decoration/water/water.png" id="16_3gfvl"]
[ext_resource type="Texture2D" uid="uid://2jf1bq4kkic5" path="res://main/asset/light.webp" id="17_54ryi"]
[ext_resource type="Script" path="res://main/fractal/fractal_navigation.gd" id="21_4ojub"]
[ext_resource type="AudioStream" uid="uid://c0a1exvvgkyj3" path="res://main/ui/voice_lines/line1.mp3" id="21_wac0u"]
[ext_resource type="AudioStream" uid="uid://dd67ax8rf278v" path="res://main/ui/voice_lines/line2.mp3" id="22_b17bp"]
[ext_resource type="AudioStream" uid="uid://buw16o87cwj7u" path="res://main/ui/voice_lines/line3.mp3" id="23_sne3l"]
[ext_resource type="AudioStream" uid="uid://c6ylkif54ir5y" path="res://main/ui/voice_lines/line4.mp3" id="24_j6qw3"]
[ext_resource type="AudioStream" uid="uid://cawp4l62afj01" path="res://main/ui/voice_lines/line5.mp3" id="25_42dq5"]
[ext_resource type="AudioStream" uid="uid://booyanorofanl" path="res://main/ui/voice_lines/i_am_with_you.mp3" id="26_wslnk"]
[ext_resource type="AudioStream" uid="uid://c2qyky4unxxjw" path="res://main/ui/voice_lines/empty_line1.mp3" id="27_ldr13"]
[ext_resource type="AudioStream" uid="uid://cgtuvd3s35c60" path="res://main/ui/voice_lines/empty_line2.mp3" id="28_fgp8r"]
[ext_resource type="AudioStream" uid="uid://1famjtok8mkj" path="res://main/ui/voice_lines/exchange_line1.mp3" id="28_q2yq7"]
[ext_resource type="AudioStream" uid="uid://cnt153c2fun3q" path="res://main/ui/voice_lines/exchange_line2.mp3" id="29_5gvsx"]
[ext_resource type="AudioStream" uid="uid://5tenfme6xb6v" path="res://main/ui/voice_lines/iamthatiam.mp3" id="29_orfka"]
[ext_resource type="AudioStream" uid="uid://5yejwvrlh1es" path="res://main/ui/voice_lines/itistime.mp3" id="30_prx76"]

[sub_resource type="CircleShape2D" id="CircleShape2D_xjnth"]
radius = 48.0

[sub_resource type="CircleShape2D" id="CircleShape2D_623yw"]
radius = 128.0

[sub_resource type="Gradient" id="Gradient_wue7c"]
colors = PackedColorArray(0, 0, 0, 1, 0, 0, 0, 0)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_vuglj"]
gradient = SubResource("Gradient_wue7c")
fill_from = Vector2(0.5, 0)
fill_to = Vector2(0.5, 0.7)
metadata/_snap_enabled = true

[sub_resource type="ShaderMaterial" id="ShaderMaterial_eiydx"]
shader = ExtResource("15_p4ca6")
shader_parameter/transparent = Color(0, 0, 0, 0)
shader_parameter/inner = Color(1, 1, 1, 1)
shader_parameter/outer = Color(0.202723, 0.202723, 0.202723, 1)
shader_parameter/inner_threshold = 0.4
shader_parameter/outer_threshold = 0.06
shader_parameter/soft_edge = 0.36
shader_parameter/center = Vector2(0.5, 0.8)
shader_parameter/OCTAVES = 6

[sub_resource type="Animation" id="Animation_xi775"]
resource_name = "picler"
length = 0.5
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PointLight2D:energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.2, 0.3, 0.4),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [1.0, 0.7, 1.2, 1.0, 0.5]
}

[sub_resource type="Animation" id="Animation_mbtn3"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("PointLight2D:energy")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ebqpl"]
_data = {
"RESET": SubResource("Animation_mbtn3"),
"picler": SubResource("Animation_xi775")
}

[sub_resource type="Environment" id="Environment_xhl1n"]

[sub_resource type="Shader" id="Shader_iyvkt"]
code = "shader_type canvas_item;

// Decrease iteration and bounce counts for better performance
// Increase collision threshold for lower detail and better performance
group_uniforms detail;
uniform int max_iter = 512; // Max iterations a regular collision ray can march
uniform int max_bounce = 2; // Max times a ray can be reflected
uniform int light_iter = 64; // Max times a shadow collision ray can march
uniform float collision_threshold = 1.0e-3; // Min distance a ray can be from a surface for it to collide
uniform float normal_sample_length = 1.0e-2; // How far along a collided surface to move when sampling for a normal vector

group_uniforms fractal;
uniform int bulb_iter = 8; // Max iterations of the fractal algorithm
uniform float bulb_power = 8.0; // Dimension of the fractal
uniform float bulb_runaway_threshold = 2.0;
uniform vec3 fractal_color1: source_color;
uniform vec3 fractal_color2: source_color;
uniform vec3 color_center_point = vec3(0.0, 0.5, -0.5);
uniform float color_intensity = 0.5;
uniform float rotation_speed = 1.0;
uniform bool mirror = false;

group_uniforms camera;
uniform float fov = 95.0; // In degrees
uniform float runaway_threshold = 8.0; // Distance where a ray is considered far enough to stop iteration

group_uniforms light;
uniform vec3 light_ray = vec3(0.0, -1.0, 0.0);

// Updated by script only
group_uniforms internal;
uniform vec3 _cam_pos = vec3(0.0); // Camera position
uniform mat3 _cam_mat = mat3(0.0); // Camera basis matrix
uniform vec2 _screen_size;

struct Material {
	float reflectivity;
	float roughness;
	float shadow_sharpness;
	float specular_alpha;
	vec3 albedo_color;
};


void rotate(inout vec3 p) {
	vec3 pt = p;
	float t = rotation_speed * TIME / 8.0;
	p.y = cos(t) * p.y + sin(t) * p.z;
	p.z = -sin(t) * pt.y + cos(t) * pt.z;
	
	t *= 1.5;
	
	pt = p;
	p.x = cos(t) * pt.x - sin(t) * pt.z;
	p.z = sin(t) * pt.x + cos(t) * pt.z;
}

// Returns distance estimate to fractal
// `collision_info` parameter is overwritten with color information
// http://blog.hvidtfeldts.net/index.php/2011/09/distance-estimated-3d-fractals-v-the-mandelbulb-different-de-approximations/
// https://iquilezles.org/articles/ftrapsgeometric/
float mandelbulb_DE(vec3 p, inout vec3 collision_info) {
	if (mirror) {
		p = mod(p, 4.0) - vec3(2.0);
	}
	
	rotate(p);
	
	vec3 offset = vec3(1.0);
	float scale = 2.0; 
	for (int i = 0; i < 16; i++) {
		if(p.x + p.y < 0.0) p.xy = -p.yx; // fold 1
		if(p.x + p.z < 0.0) p.xz = -p.zx; // fold 2
		if(p.y + p.z < 0.0) p.zy = -p.yz; // fold 3
		p = p * scale - offset * (scale - 1.0);
	}
	return length(p) * pow(scale, -float(16));
}

// Returns a vec4 of the color and distance to the closest object as rgba respectively
// `collision_info` holds extra information about the collision; Only stores
// distance values for coloring at this point
float world_DE(vec3 p, inout int collider_id, inout vec3 collision_info) {
	collider_id = 0; 
	return  mandelbulb_DE(p, collision_info);
}

int march(inout vec3 ray_pos, vec3 ray_dir, inout int id, inout vec3 collision_info) {
	float dist = 10000.0;
	int iter = 0;
	for (int i = 0; i < max_iter; i++) {
		dist = abs(world_DE(ray_pos, id, collision_info));
		ray_pos += ray_dir * dist;
		
		// We can quit marching early if we are extremely far from the fractal
		if (dist > runaway_threshold) {
			iter = max_iter;
			break;
		}
		
		// Once we are close enough to the fractal, we say we collided with it
		if (dist < collision_threshold)
			break;
		iter++;
	}
	return iter;
}

// https://iquilezles.org/articles/rmshadows/
float soft_shadow(vec3 ray_pos, vec3 ray_dir, float light_sharpness) {
	float min_shadow = 1.0;
	float dist_from_surface = 0.0;
	vec3 _orbit_dist;
	for(int i = 0; i < light_iter; i++) {
		int _id;
		float dist = abs(world_DE(ray_pos, _id, _orbit_dist));
		if(dist < collision_threshold)
			return 0.0;
		if (dist > runaway_threshold * 4.0) {
			break;
		}
		ray_pos += ray_dir * dist;
		min_shadow = min(min_shadow, light_sharpness * dist/dist_from_surface);
		dist_from_surface += dist;
	}
	return min_shadow;
}

vec3 get_normal(vec3 ray_pos) {
	int _id;
	vec3 _col_info;
	return normalize(
		vec3(world_DE(ray_pos + vec3(normal_sample_length, 0.0, 0.0), _id, _col_info) - world_DE(ray_pos - vec3(normal_sample_length, 0.0, 0.0), _id, _col_info),
			 world_DE(ray_pos + vec3(0.0, normal_sample_length, 0.0), _id, _col_info) - world_DE(ray_pos - vec3(0.0, normal_sample_length, 0.0), _id, _col_info),
			 world_DE(ray_pos + vec3(0.0, 0.0, normal_sample_length), _id, _col_info) - world_DE(ray_pos - vec3(0.0, 0.0, normal_sample_length), _id, _col_info)));
}

// https://www.scratchapixel.com/lessons/3d-basic-rendering/ray-tracing-generating-camera-rays/generating-camera-rays.html
void fragment() {
	// Initialize materials
	Material fractal = Material(0.07, 0.2, 9.0, 0.5, vec3(0.0));
	
	// Take the pixel position (UV) and convert it into a ray based on the camera's orientation
	vec3 ray_pos = _cam_pos;
	
	float px = (2.0 * UV.x - 1.0) * tan(fov * PI / 360.0) * (_screen_size.x / _screen_size.y);
	float py = (1.0 - 2.0 * UV.y * tan(fov * PI / 360.0));
	vec3 ray_dir = vec3(px, py, -1);
	ray_dir = _cam_mat * normalize(ray_dir);
	
	COLOR.a = 0.0;
	// March through scene, bouncing at collisions to create reflections
	vec3 pixel_color = vec3(0.0);
	float pixel_depth = runaway_threshold;
	for (int i = 0; i < max_bounce; i++) {
		vec3 origin = ray_pos;
		
		int collider_id;
		vec3 collision_info;
		int iter = march(ray_pos, ray_dir, collider_id, collision_info);
		
		// If we iterated up to the maximum amount of times and still haven't collided,
		// we probably escaped any objects
		if (iter == max_iter) 
			break;
		
		COLOR.a = 1.0;
		
		float x = min(1.0, collision_info.r);
		fractal.albedo_color = fractal_color1 * x + (1.0 - x) * fractal_color2;
		
		Material surface_material = fractal;
		
		vec3 normal = get_normal(ray_pos);
		
		// Reflect the ray
		ray_dir = ray_dir - 2.0 * dot(ray_dir, normal) * normal;
		ray_pos += ray_dir * collision_threshold * 4.0;
		
		vec3 hit_color = surface_material.albedo_color;
		
		// Ambient occlusion
		hit_color *= vec3(1.0 - float(iter) / float(max_iter));
		
		// Shadows based on the normal vector at this surface
		hit_color *= 0.5 + 0.5 * pow(max(0.0, dot(normal, -normalize(light_ray))), 1.0/2.4) * 1.055 - 0.055;
		
		// Specular highlights
		float specular = dot(-normalize(light_ray), ray_dir);
		float specular_power = 8.0;
		hit_color += vec3(surface_material.specular_alpha) * pow(specular, specular_power);
		
		// Ray-traced shadows
		if (!mirror) {
			hit_color *= 0.15 + 0.85 * soft_shadow(ray_pos + normal * collision_threshold * 4.0, -normalize(light_ray), surface_material.shadow_sharpness);
		}
		if (i == 0) {
			pixel_color = hit_color;
			pixel_depth = length(origin - ray_pos);
		}
		
		// Mix reflections
		pixel_color = mix(pixel_color, hit_color, surface_material.reflectivity);
	}
	pixel_color = clamp(pixel_color, 0.0, 1.0);
	COLOR.rgb = pixel_color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_yd3su"]
shader = SubResource("Shader_iyvkt")
shader_parameter/max_iter = 64
shader_parameter/max_bounce = 1
shader_parameter/light_iter = 64
shader_parameter/collision_threshold = 0.003
shader_parameter/normal_sample_length = 0.1
shader_parameter/bulb_iter = 5
shader_parameter/bulb_power = 6.0
shader_parameter/bulb_runaway_threshold = 2.0
shader_parameter/fractal_color1 = Color(1, 1, 1, 1)
shader_parameter/fractal_color2 = Color(1, 0.833662, 0.988686, 1)
shader_parameter/color_center_point = Vector3(0, 0.5, -0.5)
shader_parameter/color_intensity = 0.5
shader_parameter/rotation_speed = 1.0
shader_parameter/mirror = false
shader_parameter/fov = 100.1
shader_parameter/runaway_threshold = 8.0
shader_parameter/light_ray = Vector3(0.405, -1.57, -0.625)
shader_parameter/_cam_pos = Vector3(0, -0.08, 3.215)
shader_parameter/_cam_mat = Basis(1, 0, 0, 0, 1, 0, 0, 0, 1)
shader_parameter/_screen_size = Vector2(128, 128)

[sub_resource type="Animation" id="Animation_p5r8u"]
length = 0.001
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/bulb_power")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0),
"points": PackedFloat32Array(6, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0)
}

[sub_resource type="Animation" id="Animation_51qkl"]
resource_name = "idle"
loop_mode = 1
tracks/0/type = "bezier"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/bulb_power")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"handle_modes": PackedInt32Array(0, 0, 0),
"points": PackedFloat32Array(6, -0.25, 0, 0.25, 0, 12, -0.25, 0, 0.25, 0, 6, -0.25, 0, 0.25, 0),
"times": PackedFloat32Array(0, 0.5, 1)
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_oobx3"]
_data = {
"RESET": SubResource("Animation_p5r8u"),
"idle": SubResource("Animation_51qkl")
}

[sub_resource type="Shader" id="Shader_6eu0g"]
code = "shader_type canvas_item;

// Decrease iteration and bounce counts for better performance
// Increase collision threshold for lower detail and better performance
group_uniforms detail;
uniform int max_iter = 512; // Max iterations a regular collision ray can march
uniform int max_bounce = 2; // Max times a ray can be reflected
uniform int light_iter = 64; // Max times a shadow collision ray can march
uniform float collision_threshold = 1.0e-3; // Min distance a ray can be from a surface for it to collide
uniform float normal_sample_length = 1.0e-2; // How far along a collided surface to move when sampling for a normal vector

group_uniforms fractal;
uniform int bulb_iter = 8; // Max iterations of the fractal algorithm
uniform float bulb_power = 8.0; // Dimension of the fractal
uniform float bulb_runaway_threshold = 2.0;
uniform vec3 fractal_color1: source_color;
uniform vec3 fractal_color2: source_color;
uniform vec3 color_center_point = vec3(0.0, 0.5, -0.5);
uniform float color_intensity = 0.5;
uniform float rotation_speed = 1.0;
uniform bool mirror = false;

group_uniforms camera;
uniform float fov = 95.0; // In degrees
uniform float runaway_threshold = 8.0; // Distance where a ray is considered far enough to stop iteration

group_uniforms light;
uniform vec3 light_ray = vec3(0.0, -1.0, 0.0);

// Updated by script only
group_uniforms internal;
uniform vec3 _cam_pos = vec3(0.0); // Camera position
uniform mat3 _cam_mat = mat3(0.0); // Camera basis matrix
uniform vec2 _screen_size;

struct Material {
	float reflectivity;
	float roughness;
	float shadow_sharpness;
	float specular_alpha;
	vec3 albedo_color;
};


void rotate(inout vec3 p) {
	vec3 pt = p;
	float t = rotation_speed * TIME / 8.0;
	p.y = cos(t) * p.y + sin(t) * p.z;
	p.z = -sin(t) * pt.y + cos(t) * pt.z;
	
	t *= 1.5;
	
	pt = p;
	p.x = cos(t) * pt.x - sin(t) * pt.z;
	p.z = sin(t) * pt.x + cos(t) * pt.z;
}

// Returns distance estimate to fractal
// `collision_info` parameter is overwritten with color information
// http://blog.hvidtfeldts.net/index.php/2011/09/distance-estimated-3d-fractals-v-the-mandelbulb-different-de-approximations/
// https://iquilezles.org/articles/ftrapsgeometric/
float mandelbulb_DE(vec3 p, inout vec3 collision_info) {
	rotate(p);
	
	p = p * 0.5 + 0.5;
	vec3 q = abs(p - 0.5) - 0.5;
	float d1 = max(q.x, max(q.y, q.z)); // distance to the box
	float d = d1; // current computed distance
	float scale = 1.0;
	for (int i = 0; i < 5; i++) {
		vec3 pa = mod(p * 3.0 * scale, 3.0);
		scale *= 3.0;
		q = vec3(0.5) - abs(pa - 1.5);
		d1 = min(max(q.x, q.z), min(max(q.x, q.y), max(q.y, q.z))) / scale; //distance inside the 3 axis-aligned square tubes
		d = max(d, d1); //intersection
	}
	return d;
}

// Returns a vec4 of the color and distance to the closest object as rgba respectively
// `collision_info` holds extra information about the collision; Only stores
// distance values for coloring at this point
float world_DE(vec3 p, inout int collider_id, inout vec3 collision_info) {
	collider_id = 0; 
	return  mandelbulb_DE(p, collision_info);
}

int march(inout vec3 ray_pos, vec3 ray_dir, inout int id, inout vec3 collision_info) {
	float dist = 10000.0;
	int iter = 0;
	for (int i = 0; i < max_iter; i++) {
		dist = abs(world_DE(ray_pos, id, collision_info));
		ray_pos += ray_dir * dist;
		
		// We can quit marching early if we are extremely far from the fractal
		if (dist > runaway_threshold) {
			iter = max_iter;
			break;
		}
		
		// Once we are close enough to the fractal, we say we collided with it
		if (dist < collision_threshold)
			break;
		iter++;
	}
	return iter;
}

// https://iquilezles.org/articles/rmshadows/
float soft_shadow(vec3 ray_pos, vec3 ray_dir, float light_sharpness) {
	float min_shadow = 1.0;
	float dist_from_surface = 0.0;
	vec3 _orbit_dist;
	for(int i = 0; i < light_iter; i++) {
		int _id;
		float dist = abs(world_DE(ray_pos, _id, _orbit_dist));
		if(dist < collision_threshold)
			return 0.0;
		if (dist > runaway_threshold * 4.0) {
			break;
		}
		ray_pos += ray_dir * dist;
		min_shadow = min(min_shadow, light_sharpness * dist/dist_from_surface);
		dist_from_surface += dist;
	}
	return min_shadow;
}

vec3 get_normal(vec3 ray_pos) {
	int _id;
	vec3 _col_info;
	return normalize(
		vec3(world_DE(ray_pos + vec3(normal_sample_length, 0.0, 0.0), _id, _col_info) - world_DE(ray_pos - vec3(normal_sample_length, 0.0, 0.0), _id, _col_info),
			 world_DE(ray_pos + vec3(0.0, normal_sample_length, 0.0), _id, _col_info) - world_DE(ray_pos - vec3(0.0, normal_sample_length, 0.0), _id, _col_info),
			 world_DE(ray_pos + vec3(0.0, 0.0, normal_sample_length), _id, _col_info) - world_DE(ray_pos - vec3(0.0, 0.0, normal_sample_length), _id, _col_info)));
}

// https://www.scratchapixel.com/lessons/3d-basic-rendering/ray-tracing-generating-camera-rays/generating-camera-rays.html
void fragment() {
	// Initialize materials
	Material fractal = Material(0.07, 0.2, 9.0, 0.5, vec3(0.0));
	
	// Take the pixel position (UV) and convert it into a ray based on the camera's orientation
	vec3 ray_pos = _cam_pos;
	
	float px = (2.0 * UV.x - 1.0) * tan(fov * PI / 360.0) * (_screen_size.x / _screen_size.y);
	float py = (1.0 - 2.0 * UV.y * tan(fov * PI / 360.0));
	vec3 ray_dir = vec3(px, py, -1);
	ray_dir = _cam_mat * normalize(ray_dir);
	
	COLOR.a = 0.0;
	// March through scene, bouncing at collisions to create reflections
	vec3 pixel_color = vec3(0.0);
	float pixel_depth = runaway_threshold;
	for (int i = 0; i < max_bounce; i++) {
		vec3 origin = ray_pos;
		
		int collider_id;
		vec3 collision_info;
		int iter = march(ray_pos, ray_dir, collider_id, collision_info);
		
		// If we iterated up to the maximum amount of times and still haven't collided,
		// we probably escaped any objects
		if (iter == max_iter) 
			break;
		
		COLOR.a = 1.0;
		
		float x = min(1.0, collision_info.r);
		fractal.albedo_color = fractal_color1 * x + (1.0 - x) * fractal_color2;
		
		Material surface_material = fractal;
		
		vec3 normal = get_normal(ray_pos);
		
		// Reflect the ray
		ray_dir = ray_dir - 2.0 * dot(ray_dir, normal) * normal;
		ray_pos += ray_dir * collision_threshold * 4.0;
		
		vec3 hit_color = surface_material.albedo_color;
		
		// Ambient occlusion
		hit_color *= vec3(1.0 - float(iter) / float(max_iter));
		
		// Shadows based on the normal vector at this surface
		hit_color *= 0.5 + 0.5 * pow(max(0.0, dot(normal, -normalize(light_ray))), 1.0/2.4) * 1.055 - 0.055;
		
		// Specular highlights
		float specular = dot(-normalize(light_ray), ray_dir);
		float specular_power = 8.0;
		hit_color += vec3(surface_material.specular_alpha) * pow(specular, specular_power);
		
		// Ray-traced shadows
		if (!mirror) {
			hit_color *= 0.15 + 0.85 * soft_shadow(ray_pos + normal * collision_threshold * 4.0, -normalize(light_ray), surface_material.shadow_sharpness);
		}
		if (i == 0) {
			pixel_color = hit_color;
			pixel_depth = length(origin - ray_pos);
		}
		
		// Mix reflections
		pixel_color = mix(pixel_color, hit_color, surface_material.reflectivity);
	}
	pixel_color = clamp(pixel_color, 0.0, 1.0);
	COLOR.rgb = pixel_color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ywbof"]
shader = SubResource("Shader_6eu0g")
shader_parameter/max_iter = 64
shader_parameter/max_bounce = 1
shader_parameter/light_iter = 64
shader_parameter/collision_threshold = 0.003
shader_parameter/normal_sample_length = 0.1
shader_parameter/bulb_iter = 5
shader_parameter/bulb_power = 6.0
shader_parameter/bulb_runaway_threshold = 2.0
shader_parameter/fractal_color1 = Color(1, 1, 1, 1)
shader_parameter/fractal_color2 = Color(1, 0.833662, 0.988686, 1)
shader_parameter/color_center_point = Vector3(0, 0.5, -0.5)
shader_parameter/color_intensity = 0.5
shader_parameter/rotation_speed = 1.0
shader_parameter/mirror = false
shader_parameter/fov = 105.865
shader_parameter/runaway_threshold = 16.0
shader_parameter/light_ray = Vector3(0.405, -1.57, -0.625)
shader_parameter/_cam_pos = Vector3(0, 0, 3.555)
shader_parameter/_cam_mat = Basis(1, 0, 0, 0, 1, 0, 0, 0, 1)
shader_parameter/_screen_size = Vector2(128, 128)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_btgvu"]
shader = ExtResource("5_ippqp")
shader_parameter/vignette_intensity = 0.3
shader_parameter/vignette_opacity = 0.5
shader_parameter/vignette_rgb = Color(0, 0, 0, 1)

[sub_resource type="FontVariation" id="FontVariation_pe2j6"]
base_font = ExtResource("13_sak1r")

[sub_resource type="Animation" id="Animation_snok4"]
resource_name = "end"
length = 30.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("%Player:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(155, 160)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("../CanvasLayer/Flash:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 1.7, 2.1, 3.7, 4.1, 5.8, 6.2),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 1,
"values": [false, true, false, true, false, true, false]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("%Player/Sprites/Torso:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 1.9),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("%Player/Sprites:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 1.8, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(0, -21), Vector2(0, -21), Vector2(0, -5)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("%Player/Sprites/Shadow:position")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0, 1.8, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(-0.5, 31), Vector2(-0.5, 31), Vector2(-0.5, 14)]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("%Player:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0, 3.8, 4.1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [true, true, false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Worldlayer/World/Blood:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0, 1.8, 2),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 1,
"values": [false, false, true]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("../Worldlayer/World/Ark:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0, 6),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath(".:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0, 8.5),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [false, true]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("%Text:visible")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0, 8.3),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("Fractal/SubViewport/FractalNavigation:material:shader_parameter/mirror")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(4.5),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("Fractal/SubViewport/FractalNavigation:material:shader_parameter/fractal_color1")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(4.5),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Fractal/SubViewport/FractalNavigation/Camera3D:position")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(8.5, 30),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(8, -12, 1.731), Vector3(8, -12, -128)]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Fractal/SubViewport/FractalNavigation:material:shader_parameter/collision_threshold")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(4.6),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.01]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("Fractal:modulate")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(6.3, 25.3, 30),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(0.647395, 0.647395, 0.647395, 1), Color(0.647395, 0.647395, 0.647395, 1), Color(0, 0, 0, 1)]
}
tracks/15/type = "value"
tracks/15/imported = false
tracks/15/enabled = true
tracks/15/path = NodePath("../UILayer:visible")
tracks/15/interp = 1
tracks/15/loop_wrap = true
tracks/15/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}

[sub_resource type="Animation" id="Animation_fuyum"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("../CanvasLayer/Flash:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("%Player/Sprites/Torso:visible")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("%Player/Sprites:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(0, -21)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("%Player/Sprites/Shadow:position")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-0.5, 31)]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("%Player:visible")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("../Worldlayer/World/Blood:visible")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("../Worldlayer/World/Ark:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath(".:visible")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/8/type = "value"
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/path = NodePath("%Text:visible")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}
tracks/9/type = "value"
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/path = NodePath("Fractal/SubViewport/FractalNavigation:material:shader_parameter/mirror")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [false]
}
tracks/10/type = "value"
tracks/10/imported = false
tracks/10/enabled = true
tracks/10/path = NodePath("Fractal/SubViewport/FractalNavigation:material:shader_parameter/fractal_color1")
tracks/10/interp = 1
tracks/10/loop_wrap = true
tracks/10/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0, 0, 0, 1)]
}
tracks/11/type = "value"
tracks/11/imported = false
tracks/11/enabled = true
tracks/11/path = NodePath("Fractal/SubViewport/FractalNavigation/Camera3D:position")
tracks/11/interp = 1
tracks/11/loop_wrap = true
tracks/11/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, -0.08, 1.731)]
}
tracks/12/type = "value"
tracks/12/imported = false
tracks/12/enabled = true
tracks/12/path = NodePath("Fractal/SubViewport/FractalNavigation:material:shader_parameter/collision_threshold")
tracks/12/interp = 1
tracks/12/loop_wrap = true
tracks/12/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.001]
}
tracks/13/type = "value"
tracks/13/imported = false
tracks/13/enabled = true
tracks/13/path = NodePath("Fractal:modulate")
tracks/13/interp = 1
tracks/13/loop_wrap = true
tracks/13/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}
tracks/14/type = "value"
tracks/14/imported = false
tracks/14/enabled = true
tracks/14/path = NodePath("../UILayer:visible")
tracks/14/interp = 1
tracks/14/loop_wrap = true
tracks/14/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 1,
"values": [true]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_3f5oi"]
_data = {
"RESET": SubResource("Animation_fuyum"),
"end": SubResource("Animation_snok4")
}

[sub_resource type="ShaderMaterial" id="ShaderMaterial_t8wsp"]
shader = ExtResource("2_w464c")
shader_parameter/palette_size = 8
shader_parameter/palette = ExtResource("3_c1rxx")

[node name="Main" type="Node"]

[node name="MusicPlayer" type="AudioStreamPlayer" parent="."]
unique_name_in_owner = true
process_mode = 3
stream = ExtResource("1_f5373")
volume_db = -8.0
pitch_scale = 0.7
autoplay = true
bus = &"Music"

[node name="NaturePlayer" type="AudioStreamPlayer" parent="."]
unique_name_in_owner = true
process_mode = 3
stream = ExtResource("2_2mcl2")
volume_db = -28.0
pitch_scale = 0.3
autoplay = true
bus = &"Music"

[node name="Worldlayer" type="CanvasLayer" parent="."]
follow_viewport_enabled = true

[node name="World" type="Node2D" parent="Worldlayer"]
y_sort_enabled = true
script = ExtResource("3_pme3a")

[node name="TileMap" type="TileMap" parent="Worldlayer/World"]
z_index = -2
tile_set = ExtResource("5_g5swk")
format = 2
layer_0/tile_data = PackedInt32Array(-1, 1, 0, 65535, 65537, 0, 0, 65537, 0, -65536, 1, 0, 131071, 1, 0, 196607, 65537, 0, 262143, 1, 0, 196608, 65537, 0, 131072, 1, 0, 65536, 1, 0, 196609, 1, 0, 131073, 65537, 0, 65537, 65537, 0, 1, 65537, 0, -65535, 1, 0, 2, 1, 0, 65538, 65537, 0, 131074, 1, 0, 196610, 65537, 0, 262145, 1, 0, 262144, 1, 0, 327679, 65537, 0, 262146, 1, 0, 262147, 65537, 0, 262148, 1, 0, 196612, 1, 0, 196611, 65537, 0, 131075, 1, 0, 131076, 65537, 0, 196613, 1, 0, 262149, 65537, 0, 131077, 65537, 0, 65541, 1, 0, 65540, 65537, 0, 65539, 1, 0, 3, 65537, 0, -65534, 65537, 0, -65533, 1, 0, -65532, 1, 0, 4, 65537, 0, 5, 1, 0, -65531, 65537, 0, -65538, 1, 0, -2, 1, 0, 65534, 1, 0, 131070, 1, 0, 196606, 1, 0, 196605, 65537, 0, 262141, 1, 0, 327677, 65537, 0, 327678, 1, 0, 262142, 1, 0, 131069, 65537, 0, 65533, 65537, 0, -3, 1, 0, -65539, 1, 0, -65537, 65537, 0, -131072, 65537, 0, -131071, 65537, 0, -131070, 1, 0, -131069, 65537, 0, -131068, 65537, 0, -131067, 1, 0, -131066, 1, 0, -65530, 65537, 0, 6, 65537, 0, 65542, 1, 0, 131078, 1, 0, 196614, 65537, 0, 262150, 65537, 0, 327686, 65537, 0, 327685, 1, 0, 327684, 65537, 0, 327683, 1, 0, 327682, 1, 0, 327681, 65537, 0, 327680, 1, 0, 393215, 1, 0, 393214, 65537, 0, 393213, 1, 0, 393212, 1, 0, 327676, 1, 0, 262140, 1, 0, 196604, 65537, 0, 131068, 65537, 0, 65532, 65537, 0, -4, 1, 0, -65540, 1, 0, -65541, 65537, 0, -5, 65537, 0, 65531, 1, 0, 131067, 1, 0, 196603, 1, 0, 262139, 65537, 0, 327675, 65537, 0, 393211, 1, 0, 393210, 1, 0, 327674, 65537, 0, 262138, 1, 0, 196602, 65537, 0, 131066, 1, 0, 65530, 1, 0, -6, 65537, 0, -65542, 1, 0, -131078, 1, 0, -131077, 65537, 0, -131076, 65537, 0, -131075, 1, 0, -131074, 1, 0, -131073, 65537, 0, -196608, 65537, 0, -196607, 1, 0, -196606, 65537, 0, -196605, 65537, 0, -196604, 1, 0, -262139, 1, 0, -196603, 65537, 0, -196602, 65537, 0, -262140, 1, 0, -262141, 65537, 0, -262142, 65537, 0, -262143, 65537, 0, -262144, 65537, 0, -196609, 1, 0, -196610, 65537, 0, -196611, 1, 0, -196612, 65537, 0, -196613, 1, 0, -196614, 65537, 0, -262138, 1, 0, -196615, 1, 0, -131079, 1, 0, -65543, 65537, 0, -7, 1, 0, 65529, 1, 0, 131065, 1, 0, 196601, 65537, 0, 262137, 65537, 0, 327673, 65537, 0, 393209, 1, 0, 458745, 65537, 0, 524281, 1, 0, 524280, 1, 0, 589816, 1, 0, 655352, 1, 0, 655353, 65537, 0, 720889, 65537, 0, 589817, 1, 0, 720888, 65537, 0, 458744, 65537, 0, 393208, 65537, 0, 327672, 1, 0, 262136, 65537, 0, 196600, 65537, 0, 131064, 1, 0, 65528, 65537, 0, -8, 65537, 0, -65544, 1, 0, -131080, 1, 0, -196616, 1, 0, 655354, 65537, 0, 720890, 1, 0, 720891, 65537, 0, 720892, 65537, 0, 720893, 65537, 0, 720894, 65537, 0, 720895, 65537, 0, 655360, 65537, 0, 655361, 65537, 0, 655362, 1, 0, 589826, 1, 0, 589827, 65537, 0, 589828, 1, 0, 589829, 1, 0, 589830, 1, 0, 589831, 1, 0, 786424, 65537, 0, 851960, 65537, 0, 917496, 1, 0, 983032, 1, 0, 983033, 1, 0, 983034, 65537, 0, 983035, 65537, 0, 983036, 65537, 0, 983037, 1, 0, 983038, 65537, 0, 983039, 65537, 0, 917504, 65537, 0, 917505, 65537, 0, 917506, 65537, 0, 917507, 65537, 0, 917508, 65537, 0, 917509, 65537, 0, 983045, 1, 1, 983046, 1, 1, 983047, 1, 1, 917514, 65537, 0, 1048568, 1, 1, 1114104, 65537, 0, 1179640, 1, 0, 1245176, 65537, 0, 1245177, 65537, 0, 1245178, 1, 0, 1245179, 65537, 0, 1245180, 65537, 0, 1179644, 1, 0, 1179645, 1, 0, 1179646, 65537, 0, 1245182, 65537, 0, 1245181, 65537, 0, 1245183, 1, 0, 1179648, 65537, 0, 1179649, 65537, 0, 1179650, 65537, 0, 1179651, 65537, 0, 1179652, 65537, 0, 1179653, 1, 0, 1179654, 1, 0, 1179655, 1, 0, 1179656, 1, 0, 1179657, 65537, 0, 1179658, 1, 0, 1179659, 1, 0, 1179660, 1, 0, 1179661, 65537, 0, 1179662, 1, 0, 1179663, 65537, 0, 1179664, 65537, 0, 1179665, 65537, 0, 1179666, 65537, 0, 1179667, 65537, 0, 1179668, 1, 0, 1114132, 1, 0, 1048596, 65537, 0, 983060, 1, 1, 917524, 1, 0, 851988, 1, 0, 786452, 65537, 0, 720916, 1, 0, 655380, 65537, 0, 589844, 1, 0, 524308, 65537, 0, 458772, 1, 0, 393236, 65537, 0, 393237, 65537, 0, 327701, 1, 0, 262165, 65537, 0, 196629, 1, 0, 131093, 1, 0, 131092, 1, 0, 196628, 1, 0, 262164, 65537, 0, 327700, 1, 0, 65557, 65537, 0, 21, 65537, 0, -65515, 1, 0, -131051, 1, 0, -196587, 1, 0, -196586, 65537, 0, -262122, 1, 0, -262123, 1, 0, -262124, 1, 0, -262125, 1, 0, -196590, 65537, 0, -196591, 65537, 0, -196592, 65537, 0, -196593, 65537, 0, -196594, 1, 0, -196595, 65537, 0, -196596, 1, 0, -262133, 1, 0, -262134, 1, 0, -262135, 65537, 0, -327672, 65537, 0, -327673, 1, 0, -262137, 65537, 0, -262136, 65537, 0, -196599, 65537, 0, -196598, 65537, 0, -196597, 1, 0, -262130, 65537, 0, -262129, 1, 0, -262128, 1, 0, -262127, 1, 0, -262126, 1, 0, -262131, 1, 0, -262132, 65537, 0, -262152, 65537, 0, -262151, 1, 0, -262150, 1, 0, -262149, 65537, 0, -262148, 65537, 0, -262147, 1, 0, -262146, 65537, 0, -262145, 65537, 0, -327680, 65537, 0, -327679, 1, 0, -327678, 65537, 0, -327677, 65537, 0, -327676, 65537, 0, -327675, 1, 0, -327674, 1, 0, -327671, 65537, 0, -327670, 65537, 0, -327669, 65537, 0, -327668, 65537, 0, -327667, 1, 0, -327666, 65537, 0, -327665, 65537, 0, -327664, 1, 0, -327663, 1, 0, -327662, 65537, 0, -327659, 1, 0, -327660, 1, 0, -327661, 1, 0, 655372, 1, 0, 589836, 65537, 0, 524300, 1, 0, 458764, 1, 0, 393228, 65537, 0, 327692, 1, 0, 262156, 65537, 0, 196620, 65537, 0, 131084, 1, 0, 65548, 65537, 0, 12, 1, 0, -65524, 65537, 0, -131060, 65537, 0, -131061, 1, 0, -131062, 1, 0, -131063, 1, 0, -131064, 65537, 0, -196600, 65537, 0, -196601, 65537, 0, -131065, 65537, 0, -65529, 65537, 0, 7, 65537, 0, 65543, 1, 0, 131079, 65537, 0, 196615, 1, 0, 262151, 65537, 0, 327687, 65537, 0, 393223, 1, 0, 393222, 65537, 0, 393221, 65537, 0, 393220, 65537, 0, 393219, 1, 0, 393218, 65537, 0, 393217, 65537, 0, 393216, 1, 0, 458751, 65537, 0, 458750, 1, 0, 458749, 1, 0, 458748, 65537, 0, 458747, 1, 0, 458746, 65537, 0, 524282, 65537, 0, 589818, 65537, 0, 589819, 1, 0, 524283, 65537, 0, 524284, 65537, 0, 589820, 1, 0, 655356, 1, 0, 655355, 65537, 0, 655357, 65537, 0, 589821, 65537, 0, 524285, 1, 0, 524286, 65537, 0, 589822, 1, 0, 655358, 1, 0, 655359, 1, 0, 589823, 65537, 0, 524287, 65537, 0, 458752, 65537, 0, 524288, 65537, 0, 589824, 1, 0, 589825, 1, 0, 524289, 65537, 0, 458753, 1, 0, 458754, 1, 0, 524290, 1, 0, 524291, 1, 0, 458755, 1, 0, 458756, 1, 0, 524292, 1, 0, 524293, 1, 0, 458757, 1, 0, 458758, 65537, 0, 524294, 65537, 0, 524295, 1, 0, 458759, 65537, 0, 458760, 1, 0, 393224, 65537, 0, 327688, 1, 0, 262152, 65537, 0, 196616, 1, 0, 131080, 1, 0, 65544, 1, 0, 8, 65537, 0, -65528, 65537, 0, -65527, 65537, 0, 9, 1, 0, 65545, 1, 0, 131081, 65537, 0, 196617, 1, 0, 262153, 65537, 0, 327689, 1, 0, 393225, 65537, 0, 458761, 1, 0, 524297, 1, 0, 524296, 65537, 0, 589832, 65537, 0, 655368, 65537, 0, 655367, 1, 0, 655366, 1, 0, 655365, 1, 0, 655364, 65537, 0, 655363, 1, 0, 720899, 65537, 0, 720898, 65537, 0, 720897, 1, 0, 720896, 1, 0, 786431, 65537, 0, 786430, 65537, 0, 786429, 1, 0, 786428, 1, 0, 786427, 1, 0, 786426, 65537, 0, 786425, 65537, 0, 851961, 65537, 0, 917497, 65537, 0, 917498, 65537, 0, 851962, 1, 0, 851963, 65537, 0, 917499, 1, 0, 917500, 1, 0, 851964, 1, 0, 851965, 65537, 0, 917501, 65537, 0, 917502, 1, 0, 851966, 65537, 0, 851967, 1, 0, 917503, 65537, 0, 851968, 65537, 0, 786432, 1, 0, 786433, 65537, 0, 851969, 65537, 0, 851970, 65537, 0, 786434, 65537, 0, 786435, 65537, 0, 851971, 65537, 0, 851972, 65537, 0, 786436, 65537, 0, 720900, 1, 0, 720901, 65537, 0, 786437, 1, 0, 851973, 1, 0, 851974, 1, 0, 786438, 1, 0, 720902, 1, 0, 720903, 65537, 0, 786439, 65537, 0, 851975, 65537, 0, 917511, 1, 0, 917510, 65537, 0, 917512, 65537, 0, 851976, 1, 0, 786440, 65537, 0, 720904, 65537, 0, 720905, 65537, 0, 655369, 65537, 0, 589833, 65537, 0, 589834, 65537, 0, 524298, 1, 0, 458762, 65537, 0, 393226, 1, 0, 327690, 1, 0, 262154, 65537, 0, 196618, 1, 0, 131082, 65537, 0, 65546, 65537, 0, 10, 65537, 0, -65526, 1, 0, -65525, 65537, 0, 11, 1, 0, 65547, 1, 0, 131083, 65537, 0, 196619, 65537, 0, 262155, 65537, 0, 327691, 65537, 0, 393227, 65537, 0, 458763, 1, 0, 524299, 1, 0, 589835, 65537, 0, 655371, 1, 0, 655370, 65537, 0, 720906, 1, 0, 786442, 1, 0, 786441, 1, 0, 851977, 1, 0, 917513, 1, 0, 983049, 65537, 1, 983048, 1, 1, 1048584, 65537, 0, 1048583, 65537, 0, 1048582, 1, 0, 1048581, 1, 0, 1048580, 1, 0, 983044, 65537, 1, 983043, 65537, 1, 983042, 65537, 1, 983041, 1, 1, 983040, 1, 1, 1048575, 65537, 1, 1048574, 65537, 1, 1048573, 1, 1, 1048572, 65537, 1, 1048571, 65537, 1, 1048570, 1, 1, 1048569, 65537, 1, 1114105, 1, 0, 1179641, 1, 0, 1179642, 65537, 0, 1114106, 1, 0, 1114107, 65537, 0, 1179643, 1, 0, 1114108, 1, 0, 1114109, 1, 0, 1114110, 1, 0, 1114111, 1, 0, 1179647, 65537, 0, 1114112, 65537, 0, 1048576, 1, 0, 1048577, 1, 0, 1114113, 1, 0, 1114114, 1, 0, 1048578, 1, 0, 1048579, 65537, 0, 1114115, 1, 0, 1114116, 1, 0, 1114117, 1, 0, 1114118, 65537, 0, 1114119, 1, 0, 1114120, 1, 0, 1114121, 1, 0, 1048585, 1, 0, 1048586, 65537, 0, 983050, 65537, 1, 983051, 65537, 1, 917515, 65537, 0, 851979, 1, 0, 786443, 1, 0, 720907, 1, 0, 720908, 1, 0, 786444, 1, 0, 851980, 1, 0, 917516, 1, 0, 983052, 65537, 1, 1048588, 1, 0, 1048587, 65537, 0, 1114123, 65537, 0, 1114122, 1, 0, 1114124, 1, 0, 1114125, 65537, 0, 1048589, 1, 0, 983053, 1, 1, 917517, 1, 0, 851981, 1, 0, 786445, 1, 0, 720909, 1, 0, 655373, 1, 0, 589837, 1, 0, 524301, 1, 0, 458765, 65537, 0, 393229, 65537, 0, 327693, 65537, 0, 262157, 65537, 0, 196621, 65537, 0, 131085, 1, 0, 65549, 1, 0, 13, 1, 0, -65523, 65537, 0, -131059, 65537, 0, -131058, 65537, 0, -65522, 65537, 0, 14, 1, 0, 65550, 65537, 0, 131086, 65537, 0, 196622, 1, 0, 262158, 65537, 0, 327694, 65537, 0, 393230, 1, 0, 458766, 65537, 0, 524302, 1, 0, 589838, 1, 0, 655374, 1, 0, 720910, 65537, 0, 786446, 65537, 0, 851982, 1, 0, 917518, 1, 0, 983054, 1, 1, 1048590, 65537, 0, 1114126, 65537, 0, 1114127, 1, 0, 1048591, 1, 0, 983055, 1, 1, 917519, 65537, 0, 851983, 65537, 0, 786447, 65537, 0, 720911, 65537, 0, 655375, 1, 0, 589839, 65537, 0, 524303, 65537, 0, 458767, 65537, 0, 393231, 1, 0, 327695, 1, 0, 262159, 65537, 0, 196623, 1, 0, 131087, 1, 0, 65551, 65537, 0, 15, 1, 0, -65521, 65537, 0, -131057, 65537, 0, -131056, 65537, 0, -65520, 65537, 0, 16, 65537, 0, 65552, 65537, 0, 131088, 65537, 0, 196624, 1, 0, 262160, 1, 0, 327696, 65537, 0, 393232, 1, 0, 458768, 65537, 0, 524304, 65537, 0, 589840, 65537, 0, 655376, 65537, 0, 720912, 1, 0, 786448, 1, 0, 851984, 65537, 0, 917520, 1, 0, 983056, 65537, 1, 1048592, 1, 0, 1114128, 1, 0, 1114129, 1, 0, 1048593, 1, 0, 983057, 65537, 1, 917521, 1, 0, 851985, 65537, 0, 786449, 1, 0, 720913, 65537, 0, 655377, 1, 0, 589841, 65537, 0, 524305, 65537, 0, 458769, 65537, 0, 393233, 1, 0, 327697, 65537, 0, 262161, 65537, 0, 196625, 1, 0, 131089, 1, 0, 65553, 65537, 0, 17, 1, 0, -65519, 1, 0, -131055, 65537, 0, -131054, 65537, 0, -65518, 1, 0, 18, 65537, 0, 65554, 1, 0, 131090, 1, 0, 196626, 1, 0, 262162, 65537, 0, 327698, 65537, 0, 393234, 65537, 0, 458770, 1, 0, 524306, 1, 0, 589842, 65537, 0, 655378, 1, 0, 720914, 65537, 0, 786450, 1, 0, 851986, 1, 0, 917522, 65537, 0, 983058, 1, 1, 1048594, 1, 0, 1114130, 1, 0, 1114131, 65537, 0, 1048595, 1, 0, 983059, 65537, 1, 917523, 1, 0, 851987, 65537, 0, 786451, 65537, 0, 720915, 65537, 0, 655379, 65537, 0, 589843, 65537, 0, 524307, 65537, 0, 458771, 1, 0, 393235, 65537, 0, 327699, 1, 0, 262163, 1, 0, 196627, 1, 0, 131091, 65537, 0, 65555, 1, 0, 19, 1, 0, -65517, 65537, 0, -131053, 65537, 0, -196589, 65537, 0, -196588, 65537, 0, -131052, 65537, 0, -65516, 1, 0, 20, 1, 0, 65556, 65537, 0, 851978, 65537, 0, 458773, 1, 0, 524309, 1, 0, 589845, 1, 0, 655381, 1, 0, 720917, 1, 0, 786453, 65537, 0, 851989, 65537, 0, 917525, 1, 0, 983061, 65537, 1, 1048597, 1, 0, 1114133, 65537, 0, 1179669, 1, 0, -327658, 1, 0, -131050, 1, 0, -65514, 65537, 0, 22, 1, 0, 65558, 65537, 0, 131094, 1, 0, 196630, 65537, 0, 262166, 65537, 0, 327702, 65537, 0, 393238, 1, 0, 458774, 65537, 0, 524310, 1, 0, 589846, 65537, 0, 655382, 1, 0, 720918, 1, 0, 786454, 1, 0, 851990, 1, 0, 917526, 1, 0, 983062, 1, 1, 1048598, 65537, 0, 1114134, 1, 0, 1179670, 1, 0)

[node name="Blood" type="Sprite2D" parent="Worldlayer/World"]
visible = false
modulate = Color(0, 0, 0, 1)
position = Vector2(137, 159)
scale = Vector2(0.2, 0.08)
texture = ExtResource("5_1lvvc")

[node name="Ark" parent="Worldlayer/World" node_paths=PackedStringArray("god_layer") instance=ExtResource("4_5npem")]
position = Vector2(162, 90)
god_layer = NodePath("../../../GodLayer")

[node name="Player" parent="Worldlayer/World" instance=ExtResource("6_oshvt")]
unique_name_in_owner = true
position = Vector2(158, 187)

[node name="CollisionTileMap" type="TileMap" parent="Worldlayer/World"]
unique_name_in_owner = true
modulate = Color(1, 1, 1, 0.439216)
tile_set = ExtResource("4_s17fs")
collision_visibility_mode = 1
format = 2
layer_0/tile_data = PackedInt32Array(-327689, 0, 0, -262153, 0, 0, -196617, 0, 0, -131081, 0, 0, -65545, 0, 0, -9, 0, 0, 65527, 0, 0, 131063, 0, 0, 196599, 0, 0, 262135, 0, 0, 327671, 0, 0, 393207, 0, 0, 458743, 0, 0, 524279, 0, 0, 589815, 0, 0, 655351, 0, 0, 720887, 0, 0, 786423, 0, 0, 851959, 0, 0, 917495, 0, 0, 983031, 0, 0, 1048567, 0, 0, 1114103, 0, 0, 1179639, 0, 0, 1245175, 0, 0, -327688, 0, 0, -327687, 0, 0, -327686, 0, 0, -327685, 0, 0, -327684, 0, 0, -327683, 0, 0, -327682, 0, 0, -327681, 0, 0, -393216, 0, 0, -393215, 0, 0, -393214, 0, 0, -393213, 0, 0, -393212, 0, 0, -393211, 0, 0, -393210, 0, 0, -393209, 0, 0, -393208, 0, 0, -393207, 0, 0, -393206, 0, 0, -393205, 0, 0, -393204, 0, 0, -393203, 0, 0, -393202, 0, 0, -393201, 0, 0, -393200, 0, 0, -393199, 0, 0, -393198, 0, 0, -393197, 0, 0, -393196, 0, 0, -393195, 0, 0, -393194, 0, 0, -327657, 0, 0, -262121, 0, 0, -196585, 0, 0, -131049, 0, 0, -65513, 0, 0, 23, 0, 0, 65559, 0, 0, 131095, 0, 0, 196631, 0, 0, 262167, 0, 0, 327703, 0, 0, 393239, 0, 0, 458775, 0, 0, 524311, 0, 0, 589847, 0, 0, 655383, 0, 0, 720919, 0, 0, 786455, 0, 0, 851991, 0, 0, 917527, 0, 0, 983063, 0, 0, 1048599, 0, 0, 1114135, 0, 0, 1179671, 0, 0, 1245207, 0, 0, 1310711, 0, 0, 1310712, 0, 0, 1310713, 0, 0, 1310714, 0, 0, 1310715, 0, 0, 1310716, 0, 0, 1310717, 0, 0, 1310718, 0, 0, 1310719, 0, 0, 1245184, 0, 0, 1245185, 0, 0, 1245186, 0, 0, 1245187, 0, 0, 1245188, 0, 0, 1245189, 0, 0, 1245190, 0, 0, 1245191, 0, 0, 1245192, 0, 0, 1245193, 0, 0, 1245194, 0, 0, 1245195, 0, 0, 1245196, 0, 0, 1245197, 0, 0, 1245198, 0, 0, 1245199, 0, 0, 1245200, 0, 0, 1245201, 0, 0, 1245202, 0, 0, 1245203, 0, 0, 1245204, 0, 0, 1245205, 0, 0, 1245206, 0, 0, -393193, 0, 0, 1114104, 0, 0, 1114105, 0, 0, 1114106, 0, 0, 1114107, 0, 0, 1114108, 0, 0, 1114109, 0, 0, 1048568, 65536, 0, 1048569, 65536, 0, 1048570, 65536, 0, 1048571, 65536, 0, 1048572, 65536, 0, 1048573, 65536, 0, 1048574, 65536, 0, 1114110, 0, 0, 1048575, 65536, 0, 1114111, 0, 0, 983040, 65536, 0, 1048576, 0, 0, 983041, 65536, 0, 1048577, 0, 0, 983042, 65536, 0, 1048578, 0, 0, 983043, 65536, 0, 1048579, 0, 0, 983044, 65536, 0, 983045, 65536, 0, 983046, 65536, 0, 983047, 65536, 0, 983048, 65536, 0, 983049, 65536, 0, 983050, 65536, 0, 983051, 65536, 0, 983052, 65536, 0, 983053, 65536, 0, 983054, 65536, 0, 983055, 65536, 0, 983056, 65536, 0, 983057, 65536, 0, 983058, 65536, 0, 983059, 65536, 0, 983060, 65536, 0, 983061, 65536, 0, 983062, 65536, 0)

[node name="Saplings" type="Node2D" parent="Worldlayer/World"]
y_sort_enabled = true

[node name="Sapling" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(-372, 635)

[node name="Sapling2" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(-253, 750)

[node name="Sapling5" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(1110, 922.75)

[node name="Sapling9" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(844, 402)

[node name="Sapling7" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(521, 619)

[node name="Sapling10" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(-463, -282)

[node name="Sapling6" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(1164, 180)

[node name="Sapling8" parent="Worldlayer/World/Saplings" instance=ExtResource("5_kkdfu")]
position = Vector2(1052, 70)

[node name="Decoration" type="Node2D" parent="Worldlayer/World"]
y_sort_enabled = true

[node name="Spike" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-212, -93)

[node name="Spike2" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-76, -66)

[node name="Spike13" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-457, 138)

[node name="Spike14" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-336, 260)

[node name="Spike15" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-439, 430)

[node name="Spike18" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-524, 888)

[node name="Spike37" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-409, 855)

[node name="Spike19" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-303, 894)

[node name="Spike20" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(8, 875)

[node name="Spike21" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(231, 731)

[node name="Spike22" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(440, 887)

[node name="Spike23" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-507, 748)

[node name="Spike24" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-474, 619)

[node name="Spike25" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-514, 294)

[node name="Spike26" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-517, 499)

[node name="Spike27" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1442, 876)

[node name="Spike28" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1321, 819)

[node name="Spike29" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1451, 720)

[node name="Spike30" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1354, 582)

[node name="Spike31" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1354, 582)

[node name="Spike32" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1468, -217)

[node name="Spike33" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1338, -314)

[node name="Spike34" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1453, -333)

[node name="Spike35" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1134, -348)

[node name="Spike36" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1231, -171)

[node name="Spike38" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(638, -136)

[node name="Spike39" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(711, -42)

[node name="Spike40" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(550, 81)

[node name="Spike41" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1237, 681)

[node name="Spike42" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1236, 893)

[node name="Spike43" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1418, 329)

[node name="Spike44" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(1474, 48)

[node name="Spike16" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(43, -275)

[node name="Spike17" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-72, 437)

[node name="Spike3" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-135, -220)

[node name="Spike4" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-320, 36)

[node name="Spike5" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-188, 58)

[node name="Spike6" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-338, -100)

[node name="Spike7" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-419, -37)

[node name="Spike8" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-480, -106)

[node name="Spike9" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-411, -149)

[node name="Spike10" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-477, -228)

[node name="Spike11" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-366, -283)

[node name="Spike12" parent="Worldlayer/World/Decoration" instance=ExtResource("6_0sv2d")]
position = Vector2(-268, -215)

[node name="Cube" parent="Worldlayer/World" instance=ExtResource("11_44ph1")]
position = Vector2(-247, 656)

[node name="Sprite2D" type="Sprite2D" parent="Worldlayer/World"]
self_modulate = Color(0.598525, 0.598525, 0.598525, 1)
position = Vector2(1156, 875.75)
scale = Vector2(0.2, 0.2)
texture = ExtResource("11_d7a8q")
hframes = 8
frame = 4

[node name="Shadow" parent="Worldlayer/World/Sprite2D" instance=ExtResource("8_1aew5")]
position = Vector2(-4, 42)
scale = Vector2(0.45, 0.54)

[node name="StaticBody2D" type="StaticBody2D" parent="Worldlayer/World/Sprite2D"]
position = Vector2(0, 14)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Worldlayer/World/Sprite2D/StaticBody2D"]
shape = SubResource("CircleShape2D_xjnth")

[node name="Sprite2D2" type="Sprite2D" parent="Worldlayer/World"]
self_modulate = Color(0.598525, 0.598525, 0.598525, 1)
position = Vector2(1109, 95)
scale = Vector2(0.2, 0.2)
texture = ExtResource("14_cvt2q")

[node name="Shadow" parent="Worldlayer/World/Sprite2D2" instance=ExtResource("8_1aew5")]
position = Vector2(-6.99988, 215.5)
scale = Vector2(1.2, 1)

[node name="StaticBody2D" type="StaticBody2D" parent="Worldlayer/World/Sprite2D2"]
position = Vector2(-12.0001, 100.5)

[node name="CollisionShape2D" type="CollisionShape2D" parent="Worldlayer/World/Sprite2D2/StaticBody2D"]
position = Vector2(0, 20.0001)
shape = SubResource("CircleShape2D_623yw")

[node name="Water" type="Node2D" parent="Worldlayer/World"]
y_sort_enabled = true
position = Vector2(-512, 925)

[node name="Water2" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(32, 96)

[node name="Water4" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(96, 96)

[node name="Water5" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(32, 160)

[node name="Water6" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(32, 224)

[node name="Water7" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(96, 160)

[node name="Water8" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(96, 224)

[node name="Water10" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(160, 96)

[node name="Water12" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(224, 96)

[node name="Water13" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(160, 160)

[node name="Water14" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(160, 224)

[node name="Water15" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(224, 160)

[node name="Water16" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(224, 224)

[node name="Water18" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(288, 96)

[node name="Water20" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(352, 96)

[node name="Water21" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(288, 160)

[node name="Water22" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(288, 224)

[node name="Water23" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(352, 160)

[node name="Water24" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(352, 224)

[node name="Water26" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(416, 96)

[node name="Water28" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(480, 96)

[node name="Water29" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(416, 160)

[node name="Water30" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(416, 224)

[node name="Water31" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(480, 160)

[node name="Water32" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(480, 224)

[node name="Water3" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(544, 96)

[node name="Water9" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(608, 96)

[node name="Water11" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(544, 160)

[node name="Water17" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(544, 224)

[node name="Water19" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(608, 160)

[node name="Water25" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(608, 224)

[node name="Water27" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(672, 96)

[node name="Water33" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(736, 96)

[node name="Water34" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(672, 160)

[node name="Water35" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(672, 224)

[node name="Water36" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(736, 160)

[node name="Water37" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(736, 224)

[node name="Water38" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(800, 96)

[node name="Water39" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(864, 96)

[node name="Water40" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(800, 160)

[node name="Water41" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(800, 224)

[node name="Water42" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(864, 160)

[node name="Water43" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(864, 224)

[node name="Water44" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(928, 96)

[node name="Water45" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(992, 96)

[node name="Water46" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(928, 160)

[node name="Water47" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(928, 224)

[node name="Water48" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(992, 160)

[node name="Water49" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(992, 224)

[node name="Water50" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1056, 96)

[node name="Water51" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1120, 96)

[node name="Water52" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1056, 160)

[node name="Water53" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1056, 224)

[node name="Water54" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1120, 160)

[node name="Water55" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1120, 224)

[node name="Water56" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1184, 96)

[node name="Water57" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1248, 96)

[node name="Water58" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1184, 160)

[node name="Water59" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1184, 224)

[node name="Water60" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1248, 160)

[node name="Water61" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1248, 224)

[node name="Water62" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1312, 96)

[node name="Water63" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1376, 96)

[node name="Water64" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1312, 160)

[node name="Water65" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1312, 224)

[node name="Water66" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1376, 160)

[node name="Water67" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1376, 224)

[node name="Water68" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1440, 96)

[node name="Water69" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1504, 96)

[node name="Water70" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1440, 160)

[node name="Water71" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1440, 224)

[node name="Water72" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1504, 160)

[node name="Water73" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1504, 224)

[node name="Water74" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1568, 96)

[node name="Water75" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1632, 96)

[node name="Water76" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1568, 160)

[node name="Water77" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1568, 224)

[node name="Water78" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1632, 160)

[node name="Water79" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1632, 224)

[node name="Water80" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1696, 96)

[node name="Water81" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1760, 96)

[node name="Water82" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1696, 160)

[node name="Water83" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1696, 224)

[node name="Water84" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1760, 160)

[node name="Water85" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1760, 224)

[node name="Water86" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1824, 96)

[node name="Water87" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1888, 96)

[node name="Water88" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1824, 160)

[node name="Water89" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1824, 224)

[node name="Water90" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1888, 160)

[node name="Water91" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1888, 224)

[node name="Water92" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1952, 96)

[node name="Water94" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1952, 160)

[node name="Water95" parent="Worldlayer/World/Water" instance=ExtResource("9_bkrme")]
position = Vector2(1952, 224)

[node name="Sprite2D2" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(96, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D3" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(32, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D4" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(224, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D5" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(160, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D6" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(352, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D7" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(288, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D8" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(480, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D9" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(416, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D10" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(608, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D11" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(544, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D12" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(736, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D13" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(672, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D14" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(864, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D15" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(800, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D16" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(992, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D17" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(928, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D18" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1120, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D19" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1056, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D20" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1248, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D21" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1184, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D22" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1376, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D23" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1312, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D24" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1504, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D25" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1440, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D26" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1632, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D27" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1568, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D28" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1760, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D29" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1696, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D30" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1888, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D31" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1824, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D32" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(2016, 73)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Sprite2D33" type="Sprite2D" parent="Worldlayer/World/Water"]
z_index = 1
position = Vector2(1952, 72)
scale = Vector2(1, 0.25)
texture = SubResource("GradientTexture2D_vuglj")

[node name="Fire" type="Sprite2D" parent="Worldlayer/World"]
material = SubResource("ShaderMaterial_eiydx")
position = Vector2(524, 614)
scale = Vector2(0.5, 0.5)
texture = ExtResource("16_3gfvl")

[node name="PointLight2D" type="PointLight2D" parent="Worldlayer/World/Fire"]
position = Vector2(2, 16)
range_layer_min = -8
range_layer_max = 8
texture = ExtResource("17_54ryi")
texture_scale = 0.9

[node name="AnimationPlayer" type="AnimationPlayer" parent="Worldlayer/World/Fire"]
libraries = {
"": SubResource("AnimationLibrary_ebqpl")
}
autoplay = "picler"
speed_scale = 0.5

[node name="BabyFractal" type="SubViewportContainer" parent="Worldlayer/World"]
z_index = 1
offset_left = 883.0
offset_top = 398.0
offset_right = 1011.0
offset_bottom = 526.0

[node name="Shadow" parent="Worldlayer/World/BabyFractal" instance=ExtResource("8_1aew5")]
position = Vector2(65, 130)
scale = Vector2(0.15, 0.1)

[node name="SubViewport" type="SubViewport" parent="Worldlayer/World/BabyFractal"]
transparent_bg = true
handle_input_locally = false
size = Vector2i(128, 128)
render_target_update_mode = 4

[node name="WorldEnvironment" type="WorldEnvironment" parent="Worldlayer/World/BabyFractal/SubViewport"]
environment = SubResource("Environment_xhl1n")

[node name="FractalNavigation" type="ColorRect" parent="Worldlayer/World/BabyFractal/SubViewport" node_paths=PackedStringArray("camera")]
unique_name_in_owner = true
material = SubResource("ShaderMaterial_yd3su")
custom_minimum_size = Vector2(128, 128)
script = ExtResource("21_4ojub")
camera = NodePath("Camera3D")

[node name="Camera3D" type="Camera3D" parent="Worldlayer/World/BabyFractal/SubViewport/FractalNavigation"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.08, 3.215)

[node name="AnimationPlayer" type="AnimationPlayer" parent="Worldlayer/World/BabyFractal/SubViewport/FractalNavigation"]
libraries = {
"": SubResource("AnimationLibrary_oobx3")
}
speed_scale = 0.1

[node name="BabyFractal2" type="SubViewportContainer" parent="Worldlayer/World"]
z_index = 1
offset_left = 709.0
offset_top = 268.0
offset_right = 837.0
offset_bottom = 396.0

[node name="Shadow" parent="Worldlayer/World/BabyFractal2" instance=ExtResource("8_1aew5")]
position = Vector2(63, 113)
scale = Vector2(0.15, 0.1)

[node name="SubViewport" type="SubViewport" parent="Worldlayer/World/BabyFractal2"]
transparent_bg = true
handle_input_locally = false
size = Vector2i(128, 128)
render_target_update_mode = 4

[node name="WorldEnvironment" type="WorldEnvironment" parent="Worldlayer/World/BabyFractal2/SubViewport"]
environment = SubResource("Environment_xhl1n")

[node name="FractalNavigation" type="ColorRect" parent="Worldlayer/World/BabyFractal2/SubViewport" node_paths=PackedStringArray("camera")]
material = SubResource("ShaderMaterial_ywbof")
custom_minimum_size = Vector2(128, 128)
script = ExtResource("21_4ojub")
camera = NodePath("Camera3D")

[node name="Camera3D" type="Camera3D" parent="Worldlayer/World/BabyFractal2/SubViewport/FractalNavigation"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3.555)

[node name="AnimationPlayer" type="AnimationPlayer" parent="Worldlayer/World/BabyFractal2/SubViewport/FractalNavigation"]
libraries = {
"": SubResource("AnimationLibrary_oobx3")
}
speed_scale = 0.1

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Vignette" type="ColorRect" parent="CanvasLayer"]
material = SubResource("ShaderMaterial_btgvu")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Flash" type="ColorRect" parent="CanvasLayer"]
visible = false
modulate = Color(0, 0, 0, 1)
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="UILayer" type="CanvasLayer" parent="."]

[node name="BabyFractal" parent="UILayer" instance=ExtResource("7_i71pd")]
offset_left = 107.0
offset_top = 210.0
offset_right = 155.0
offset_bottom = 258.0
scale = Vector2(0.7, 0.7)

[node name="TextureRect" type="TextureRect" parent="UILayer"]
offset_left = 19.0
offset_top = 214.0
offset_right = 251.0
offset_bottom = 414.0
scale = Vector2(0.15, 0.15)
texture = ExtResource("8_chbmg")

[node name="SeedLabel" type="Label" parent="UILayer"]
offset_left = 51.0
offset_top = 216.0
offset_right = 94.0
offset_bottom = 242.0
theme = ExtResource("4_h538u")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
text = "x23"
script = ExtResource("8_y18kr")
property = "seeds"

[node name="FruitLabel" type="Label" parent="UILayer"]
offset_left = 145.0
offset_top = 216.0
offset_right = 188.0
offset_bottom = 242.0
theme = ExtResource("4_h538u")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
text = "x23"
script = ExtResource("8_y18kr")
property = "fruits"

[node name="InteractLabel" type="Label" parent="UILayer"]
unique_name_in_owner = true
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -100.0
offset_top = -76.0
offset_right = 100.0
offset_bottom = -50.0
grow_horizontal = 2
grow_vertical = 0
theme = ExtResource("4_h538u")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
text = "123456"
horizontal_alignment = 1
script = ExtResource("8_1lx0r")

[node name="GodLayer" type="CanvasLayer" parent="."]
layer = 8
visible = false
script = ExtResource("12_kiemv")
initial_lines = Array[String](["meager druid, created from my blood and flesh...", "a new era of eternal harmony is upon us.", "i require sustenance until the millennial kingdom is complete.", "plant your seeds in my soils and nourish me with your fruits.", "bring forth your harvest in exchange for more seeds.", "i am with you."])
initial_clips = Array[AudioStream]([ExtResource("21_wac0u"), ExtResource("22_b17bp"), ExtResource("23_sne3l"), ExtResource("24_j6qw3"), ExtResource("25_42dq5"), ExtResource("26_wslnk")])
exchange_lines = Array[String](["your harvest is plentiful.", "take these seeds and return with more fruit."])
exchange_clips = Array[AudioStream]([ExtResource("28_q2yq7"), ExtResource("29_5gvsx")])
final_lines = Array[String](["it is time."])
final_clips = Array[AudioStream]([ExtResource("30_prx76")])
empty_lines = Array[String](["you bring forth no fruit, yet you dare witness me?", "plant your seeds in the ground and wait for their fruition.", "i am that i am."])
empty_clips = Array[AudioStream]([ExtResource("27_ldr13"), ExtResource("28_fgp8r"), ExtResource("29_orfka")])

[node name="Fractal" parent="GodLayer" instance=ExtResource("1_wh10r")]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_right = 0.0
offset_bottom = 0.0
grow_horizontal = 2
grow_vertical = 2

[node name="SubViewport" parent="GodLayer/Fractal" index="0"]
render_target_update_mode = 0

[node name="Text" type="RichTextLabel" parent="GodLayer"]
unique_name_in_owner = true
custom_minimum_size = Vector2(0, 120)
anchors_preset = 12
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
offset_top = -48.0
grow_horizontal = 2
grow_vertical = 0
theme = ExtResource("4_h538u")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_constants/shadow_outline_size = 3
theme_override_fonts/normal_font = SubResource("FontVariation_pe2j6")
bbcode_enabled = true
text = "[center][shake]"
scroll_active = false

[node name="Voice" type="AudioStreamPlayer" parent="GodLayer"]
unique_name_in_owner = true
stream = ExtResource("21_wac0u")
volume_db = -22.0
bus = &"Voice"

[node name="AnimationPlayer" type="AnimationPlayer" parent="GodLayer"]
libraries = {
"": SubResource("AnimationLibrary_3f5oi")
}
speed_scale = 0.5

[node name="PaletteLayer" type="CanvasLayer" parent="."]
layer = 9

[node name="PaletteLimiter" type="ColorRect" parent="PaletteLayer"]
material = SubResource("ShaderMaterial_t8wsp")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[editable path="Worldlayer/World/Player"]
[editable path="GodLayer/Fractal"]
